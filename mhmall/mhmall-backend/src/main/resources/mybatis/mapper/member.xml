<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<!-- 아이디중복확인 -->
	<select id="countById" parameterType="membervo" resultType="Integer">
	<![CDATA[
		select count(*) from member where id=AES_ENCRYPT(#{id}, #{aesKey})
	]]>
	</select>

	<!-- 회원가입 -->
 	<insert id="inserts" parameterType="membervo">
	<![CDATA[
		insert into member(id, password, name, phone, email, zipcode, addr, reg_date, role)
		values(
		AES_ENCRYPT(#{id}, #{aesKey}),
		SHA2(#{password}, 512),
		AES_ENCRYPT(#{name}, #{aesKey}),
		AES_ENCRYPT(#{phone}, #{aesKey}),
		AES_ENCRYPT(#{email}, #{aesKey}),
		AES_ENCRYPT(#{zipcode}, #{aesKey}),
		AES_ENCRYPT(#{addr}, #{aesKey}),
		now(),
		#{role})
	]]>
		<!-- SHA2(#{password}, 512), -->

	</insert>
	
	
	<!-- 로그인 -->
	<select id="selectbyidandpassword" parameterType="membervo" resultType="membervo">
	<![CDATA[
		SELECT 
		cast(AES_DECRYPT(id, #{aesKey}) as char) as id,
		password,
		cast(AES_DECRYPT(name, #{aesKey}) as char) as name,
		cast(AES_DECRYPT(phone, #{aesKey}) as char) as phone,
		cast(AES_DECRYPT(email, #{aesKey}) as char) as email,
		cast(AES_DECRYPT(zipcode, #{aesKey}) as char) as zipcode,
		cast(AES_DECRYPT(addr, #{aesKey}) as char) as addr,
		reg_date as regDate,
		role
		
		FROM member
		where id=AES_ENCRYPT(#{id}, #{aesKey})
		and password=SHA2(#{password}, 512)
	]]>
	</select>
	
	
	<!-- 회원리스트 -->
	<select id="selectlist" parameterType="java.util.Map" resultType="membervo">
		SELECT 
		cast(AES_DECRYPT(id, #{aesKey}) as char) as id,
		password,
		cast(AES_DECRYPT(name, #{aesKey}) as char) as name,
		cast(AES_DECRYPT(phone, #{aesKey}) as char) as phone,
		cast(AES_DECRYPT(email, #{aesKey}) as char) as email,
		cast(AES_DECRYPT(zipcode, #{aesKey}) as char) as zipcode,
		cast(AES_DECRYPT(addr, #{aesKey}) as char) as addr,
		DATE_FORMAT(reg_date,'%Y년%m월%d일') as regDate,
		role
		FROM member
		<if test="search != null">
		where cast(AES_DECRYPT(name, #{aesKey}) as char) like CONCAT('%',#{search},'%')
		</if>
		order by regDate desc
	</select>
	
	
	<!-- 아이디로 회원조회 -->
	<select id="selectonebyid" parameterType="membervo" resultType="membervo">
	<![CDATA[
		SELECT 
		cast(AES_DECRYPT(id, #{aesKey}) as char) as id,
		password,
		cast(AES_DECRYPT(name, #{aesKey}) as char) as name,
		cast(AES_DECRYPT(phone, #{aesKey}) as char) as phone,
		cast(AES_DECRYPT(email, #{aesKey}) as char) as email,
		cast(AES_DECRYPT(zipcode, #{aesKey}) as char) as zipcode,
		cast(AES_DECRYPT(addr, #{aesKey}) as char) as addr,
		reg_date as regDate,
		role
		FROM member
		where id=AES_ENCRYPT(#{id}, #{aesKey})
	]]>
	</select>
	
	
	<!-- 회원삭제 -->
	<select id="delete" parameterType="membervo">
	<![CDATA[
		DELETE FROM member where id=AES_ENCRYPT(#{id}, #{aesKey})
	]]>
	</select>
	
	
	<!-- 회원수정 -->
	<update id="update" parameterType="membervo">
		update member set
		
		<if test="password != ''">
		password=SHA2(#{password}, 512),
		</if>
		name=AES_ENCRYPT(#{name}, #{aesKey}),
		phone=AES_ENCRYPT(#{phone}, #{aesKey}),
		email=AES_ENCRYPT(#{email}, #{aesKey}),
		zipcode=AES_ENCRYPT(#{zipcode}, #{aesKey}),
		addr=AES_ENCRYPT(#{addr}, #{aesKey})
		
		where id=AES_ENCRYPT(#{id}, #{aesKey})
	</update>
	
	
	
	<!-- 인증 -->
	<select id="selectbymocktoken" parameterType="membervo" resultType="membervo">
	<![CDATA[
		SELECT 
		cast(AES_DECRYPT(id, #{aesKey}) as char) as id,
		password,
		cast(AES_DECRYPT(name, #{aesKey}) as char) as name,
		cast(AES_DECRYPT(phone, #{aesKey}) as char) as phone,
		cast(AES_DECRYPT(email, #{aesKey}) as char) as email,
		cast(AES_DECRYPT(zipcode, #{aesKey}) as char) as zipcode,
		cast(AES_DECRYPT(addr, #{aesKey}) as char) as addr,
		reg_date as regDate,
		role,
		
		SHA2(concat(cast(AES_DECRYPT(id, #{aesKey}) as char), password), 512) as mockToken
		
		FROM member
		where SHA2(concat(cast(AES_DECRYPT(id, #{aesKey}) as char), password), 512)=#{mockToken}
	]]>
	</select>
	
	
	
	
	
</mapper>
